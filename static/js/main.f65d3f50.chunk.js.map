{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ThemeButton/ThemeButton.module.css","redux/actions/index.js","redux/actions/actions.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Section/Section.js","components/Filter/Filter.js","components/ThemeButton/ThemeButton.js","components/Wrapper/Wrapper.js","components/App.js","redux/reducers/contactsReducer.js","redux/reducers/themeReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addName","createAction","name","number","payload","contact","id","uuidv4","deleteContact","changeFilter","toggleTheme","INITIAL_STATE","ContactForm","state","handleSubmit","e","preventDefault","props","onAddName","setState","handleChange","target","value","themeColor","this","theme","className","s","onSubmit","input","type","onChange","mask","maskChar","Component","mapDispatchToProps","connect","ownProps","item","contacts","items","find","dispatch","onDeleteContact","onClick","normalizeFilter","filter","toLowerCase","includes","list","map","key","title","children","section","box","isThemeLigth","document","body","style","backgroundColor","visibleFilter","length","visibleList","createReducer","action","alert","contactsReducer","combineReducers","themeReducer","store","configureStore","reducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f65d3f50.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemLight\":\"ContactItem_itemLight__3p93l\",\"itemDark\":\"ContactItem_itemDark__1b8q4\",\"btnLight\":\"ContactItem_btnLight__39En6\",\"btnDark\":\"ContactItem_btnDark__W1rCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1H5TC\",\"nameLight\":\"Section_nameLight__2FpfW\",\"nameDark\":\"Section_nameDark__3ET1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__3Wro7\",\"labelLight\":\"Filter_labelLight__30hQ2\",\"labelDark\":\"Filter_labelDark__36B0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__YG2x4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnLight\":\"ThemeButton_btnLight__113VV\",\"btnDark\":\"ThemeButton_btnDark__2xOeF\"};","import {createAction} from '@reduxjs/toolkit';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport * as action from './actions';\r\n\r\nexport const addName = createAction(action.ADD, ({name, number}) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(action.DELETE);\r\n\r\nexport const changeFilter = createAction(action.CHANGE_FILTER);\r\n\r\nexport const toggleTheme = createAction(action.TOGGLE_THEME);\r\n","export const ADD = 'name/add';\r\nexport const DELETE = 'name/delete';\r\nexport const CHANGE_FILTER = 'name/filter';\r\nexport const TOGGLE_THEME = 'theme/toggle';\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addName} from '../../redux/actions/index';\r\n\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {...INITIAL_STATE};\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddName(this.state);\r\n    this.setState({...INITIAL_STATE});\r\n  };\r\n\r\n  handleChange = ({target}) => {\r\n    const {name, value} = target;\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    const {themeColor} = this.props.theme;\r\n    const {name, number} = this.state;\r\n    return (\r\n      <form className={s[`form${themeColor}`]} onSubmit={this.handleSubmit}>\r\n        <label className={s[`label${themeColor}`]}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s[`label${themeColor}`]}>\r\n          Number\r\n          <InputMask\r\n            className={s.input}\r\n            mask=\"999-99-99\"\r\n            maskChar=\" \"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={s[`btnForm${themeColor}`]} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddName: addName,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {deleteContact} from '../../redux/actions/index';\r\n\r\nimport s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({contact, number, theme, onDeleteContact}) => {\r\n  return (\r\n    <li className={s[`item${theme}`]}>\r\n      <p>\r\n        {contact}: {number}\r\n      </p>\r\n      <button className={s[`btn${theme}`]} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\r\n  return {\r\n    contact: item.name,\r\n    number: item.number,\r\n    theme: state.theme.themeColor,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onDeleteContact: () => dispatch(deleteContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ContactItem from '../ContactItem/ContactItem';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({contacts}) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({id}) => {\r\n        return <ContactItem id={id} key={id} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const {items, filter} = state.contacts;\r\n  const normalizeFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(({name}) =>\r\n    name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({title, theme, children}) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s[`name${theme}`]}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({theme}) => ({\r\n  theme: theme.themeColor,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Section);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {changeFilter} from '../../redux/actions/index';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({value, theme, onChange}) => {\r\n  return (\r\n    <div className={s.box}>\r\n      <label className={s[`label${theme}`]}>\r\n        Find contacts by name\r\n        <input value={value} onChange={({target}) => onChange(target.value)} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n  theme: state.theme.themeColor,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChange: changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {toggleTheme} from '../../redux/actions/index';\r\n\r\nimport s from './ThemeButton.module.css';\r\n\r\nconst ThemeButton = ({theme, toggleTheme}) => {\r\n  return (\r\n    <button\r\n      className={s[`btn${theme}`]}\r\n      type=\"button\"\r\n      onClick={() => toggleTheme()}\r\n    >\r\n      Theme: {theme}\r\n    </button>\r\n  );\r\n};\r\nconst mapStateToProps = ({theme}) => {\r\n  return {\r\n    theme: theme.themeColor,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  toggleTheme: toggleTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeButton);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Wrapper = ({theme, children}) => {\r\n  const {themeColor} = theme;\r\n  const isThemeLigth = themeColor === 'Light';\r\n  isThemeLigth\r\n    ? (document.body.style.backgroundColor = '#ffffff')\r\n    : (document.body.style.backgroundColor = '#0a4658');\r\n  return <div>{children}</div>;\r\n};\r\nconst mapStateToProps = ({theme}) => ({\r\n  theme\r\n});\r\nexport default connect(mapStateToProps)(Wrapper);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Section from './Section/Section';\r\nimport Filter from './Filter/Filter';\r\nimport ThemeButton from './ThemeButton/ThemeButton';\r\nimport Wrapper from './Wrapper/Wrapper';\r\n\r\nconst App = ({contacts}) => {\r\n  const visibleFilter = contacts.items.length > 1;\r\n  const visibleList = contacts.items.length > 0;\r\n  return (\r\n    <Wrapper>\r\n      <ThemeButton />\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n        {visibleFilter && <Filter />}\r\n      </Section>\r\n      {visibleList && (\r\n        <Section title=\"Contacts\">\r\n          <ContactList />\r\n        </Section>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport {addName, deleteContact, changeFilter} from '../actions/index';\r\n\r\nconst onAddName = (state, action) => {\r\n  const ideticalContact = state.find(\r\n    contact =>\r\n      contact.name.toLowerCase() === action.payload.contact.name.toLowerCase(),\r\n  );\r\n  return ideticalContact\r\n    ? alert('This contact already exists!')\r\n    : [...state, action.payload.contact];\r\n};\r\n\r\nconst onDeleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst onChangeFilter = (state, action) => {\r\n  return action.payload;\r\n};\r\n\r\nexport const items = createReducer([], {\r\n  [addName]: onAddName,\r\n  [deleteContact]: onDeleteContact,\r\n});\r\n\r\nexport const filter = createReducer('', {\r\n  [changeFilter]: onChangeFilter,\r\n});\r\n","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport {toggleTheme} from '../actions/index';\r\n\r\nconst onToggleTheme = (state) => {\r\n  return state === 'Light' ? (state = 'Dark') : (state = 'Light');\r\n};\r\n\r\nexport const themeColor = createReducer('Light', {\r\n  [toggleTheme]: onToggleTheme,\r\n});\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {items, filter} from './contactsReducer';\r\nimport {themeColor} from './themeReducer';\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport const themeReducer = combineReducers({\r\n  themeColor,\r\n});\r\n","import {configureStore} from '@reduxjs/toolkit';\r\n\r\nimport {contactsReducer, themeReducer} from './reducers/rootReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    theme: themeReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3OU0p\",\"labelLight\":\"ContactForm_labelLight__3jAb8\",\"labelDark\":\"ContactForm_labelDark__1t_Zu\",\"formLight\":\"ContactForm_formLight__1Z2c6\",\"formDark\":\"ContactForm_formDark__2-x1-\",\"btnFormLight\":\"ContactForm_btnFormLight__1q4AY\",\"btnFormDark\":\"ContactForm_btnFormDark__2KjKu\",\"btnForm\":\"ContactForm_btnForm__1oNtx\"};"],"sourceRoot":""}